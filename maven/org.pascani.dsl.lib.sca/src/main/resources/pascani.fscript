function pascani-element-exists(selector) {
	return size($selector) > 0;
}

action pascani-add-intent(parent, target, intentName, routingKey) {
	-- 1. Create a new instance of the intent composite
	clone = sca-new($intentName);
	
	-- 2. Add the intent instance as a child of the target's parent
	add-scachild($parent, $clone);
	intent = $parent/scachild::$intentName;

	-- 3. Change the name of the intent component to be the routing key
	set-name($intent, $routingKey);
	intent = $parent/scachild::$routingKey;
	
	-- 4. Sets the routing key
	property = $intent/scachild::probe/scaproperty::property;
	set-value($property, concat("routingkey=", $routingKey));

	-- 5. Add the REST binding to the Resumable interface, and then add the SCA intent
	add-scaintent($target, $intent);
	
	-- 6. Wire the event handler service
	service = $intent/scachild::probe/scaservice::handler;
	reference = $intent/scachild::primitiveIntentHandler/scareference::handler;
	add-scawire($reference, $service);
	
	-- 7. Clean things up
	sca-remove($intentName); 
	set-state($intent, "STARTED");
	set-state($parent, "STARTED");
}

action pascani-remove-intent(parent, target, routingKey, randomName) {
	-- 1. Remove the SCA intent
	intent = $parent/scachild::$routingKey;
	remove-scaintent($target, $intent);
	-- 2. Remove the intent component from the target's parent
	set-state($intent, "STOPPED");
	-- FraSCAti freezes when stopping a top level component.
	-- This is a requirement for removing child components though.
	-- set-state($parent, "STOPPED");
	-- remove-scachild($parent, $intent);
	-- set-state($parent, "STARTED");
	-- Instead of that, rename the component to a random name and shutdown probe & producer
	pascani-probe-set($parent, $routingKey, "shutdown=both");
	set-name($intent, $randomName);
}

action pascani-probe-set(parent, routingKey, key_value) {
	intent = $parent/scachild::$routingKey;
	property = $intent/scachild::probe/scaproperty::property;
	set-value($property, $key_value);
}
